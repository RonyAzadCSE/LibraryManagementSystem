@model LibraryManagementSystem.Models.BookCategory

@{
    ViewData["Title"] = "Edit Book Category";
}

<div class="card shadow p-4 mb-4 bg-white rounded">
    <div class="card-header bg-white border-0">
        <h2 class="card-title mb-0">Edit Book Category</h2>
    </div>
    <div class="card-body">
        <form id="editCategoryForm">
            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
            <input type="hidden" asp-for="Id" />
            <div class="mb-3">
                <label asp-for="CategoryName" class="form-label"></label>
                <input asp-for="CategoryName" class="form-control" />
                <span asp-validation-for="CategoryName" class="text-danger"></span>
            </div>
            <div class="d-flex justify-content-between">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save me-1"></i> Save
                </button>
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-1"></i> Back to List
                </a>
            </div>
        </form>
    </div>
</div>


@section Scripts {  
    @await Html.PartialAsync("_ValidationScriptsPartial")  

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>  
    <script>  
        $(document).ready(function () {  
            $('#editCategoryForm').submit(function (e) {  
                e.preventDefault(); // prevent default form submission  

                Swal.fire({  
                    title: 'Saving...',  
                    allowOutsideClick: false,  
                    didOpen: () => Swal.showLoading()  
                });  

                $.ajax({  
                    type: 'POST',  
                    url: '@Url.Action("Edit", "BookCategory")',  
                    data: $(this).serialize(),  
                    success: function () {  
                        Swal.fire({  
                            icon: 'success',  
                            title: 'Updated!',  
                            text: 'Book category updated successfully.'  
                        });  
                    },  
                    error: function () {  
                        Swal.fire('Error', 'Failed to update the category.', 'error');  
                    }  
                });  
            });  
        });  
    </script>  
}
